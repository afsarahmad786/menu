<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Menu Management</title>
    <!-- Bootstrap CSS via CDN -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <style>
      .menu-item {
        margin: 10px 0;
      }
      .submenu-toggle {
        cursor: pointer;
        color: blue;
      }
      .submenu-content {
        display: none;
        margin-left: 20px;
      }
      .update-form {
        display: none;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1 class="mt-5">Menu Management</h1>

      <!-- Create Menu Form -->
      <form action="/menu-management" method="POST">
        <div class="mb-3">
          <label for="menuName" class="form-label">Menu Name:</label>
          <input
            type="text"
            id="menuName"
            name="menuName"
            class="form-control"
            required
          />
        </div>

        <div class="mb-3">
          <label for="menuDescription" class="form-label">Description:</label>
          <textarea
            id="menuDescription"
            name="menuDescription"
            class="form-control"
            rows="3"
            required
          ></textarea>
        </div>

        <button type="submit" class="btn btn-primary">Create Menu</button>
      </form>

      <!-- Created Menus -->
      <h2 class="mt-5">Created Menus</h2>
      <% if (menus.length > 0) { %>
      <ul class="list-group">
        <% menus.forEach(menu => { %>
        <li class="list-group-item menu-item">
          <!-- Menu details -->
          <div class="d-flex">
            <div><strong>Name:</strong> <%= menu.name %></div>
            <div class="ml-auto">
              <!-- Add Submenu button -->
              <button
                type="button"
                class="btn btn-sm btn-primary"
                onclick="showAddSubmenuModal('<%= menu._id %>')"
              >
                +
              </button>
            </div>
          </div>
          <strong>Description:</strong> <%= menu.description %> <br />

          <!-- Update and delete buttons -->
          <button
            onclick="showUpdateForm('<%= menu._id %>')"
            class="btn btn-sm btn-warning"
          >
            Update
          </button>
          <form
            action="/menu-management/delete/<%= menu._id %>"
            method="POST"
            style="display: inline"
          >
            <button type="submit" class="btn btn-sm btn-danger">Delete</button>

            <!-- Submenu toggle (mockup) -->
            <span
              class="submenu-toggle"
              onclick="toggleSubmenu('<%= menu._id %>')"
              >Show/Hide Submenu</span
            >
            <div id="submenu-<%= menu._id %>" class="submenu-content">
              <!-- Placeholder for submenus -->
              <p>No submenus available.</p>
            </div>
          </form>

          <!-- Update form (initially hidden) -->
          <div id="update-form-<%= menu._id %>" class="update-form">
            <form
              action="/menu-management/update/<%= menu._id %>"
              method="POST"
            >
              <div class="mb-3">
                <label for="updateName-<%= menu._id %>" class="form-label"
                  >New Name:</label
                >
                <input
                  type="text"
                  id="updateName-<%= menu._id %>"
                  name="menuName"
                  class="form-control"
                  value="<%= menu.name %>"
                  required
                />
              </div>

              <div class="mb-3">
                <label
                  for="updateDescription-<%= menu._id %>"
                  class="form-label"
                  >New Description:</label
                >
                <textarea
                  id="updateDescription-<%= menu._id %>"
                  name="menuDescription"
                  class="form-control"
                  rows="3"
                  required
                >
<%= menu.description %></textarea
                >
              </div>

              <button type="submit" class="btn btn-primary">Save</button>
              <button
                type="button"
                onclick="hideUpdateForm('<%= menu._id %>')"
                class="btn btn-secondary"
              >
                Cancel
              </button>
            </form>
          </div>
        </li>
        <% }); %>
      </ul>
      <% } else { %>
      <p>No menus available. Create the first menu above.</p>
      <% } %>
    </div>

    <!-- Add Submenu Modal -->
    <div
      class="modal fade"
      id="addSubmenuModal"
      tabindex="-1"
      aria-labelledby="addSubmenuModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addSubmenuModalLabel">Add Submenu</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="addSubmenuForm">
              <div class="mb-3">
                <label for="submenuName" class="form-label"
                  >Submenu Name:</label
                >
                <input
                  type="text"
                  id="submenuName"
                  name="submenuName"
                  class="form-control"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="submenuDescription" class="form-label"
                  >Submenu Description:</label
                >
                <textarea
                  id="submenuDescription"
                  name="submenuDescription"
                  class="form-control"
                  rows="3"
                  required
                ></textarea>
              </div>
              <button
                type="button"
                class="btn btn-primary"
                onclick="addSubmenu()"
              >
                Add Submenu
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JavaScript Bundle (Bootstrap JS + Popper.js) via CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Your scripts here -->
    <script>
      let currentMenuId; // Variable to store current menu ID for adding submenu

      function showAddSubmenuModal(menuId) {
        document.getElementById("addSubmenuForm").reset();
        currentMenuId = menuId; // Set the current menu ID
        var modal = new bootstrap.Modal(
          document.getElementById("addSubmenuModal")
        );
        modal.show();
      }

      async function addSubmenu() {
        console.log(currentMenuId);
        const submenuName = document.getElementById("submenuName").value;
        const submenuDescription =
          document.getElementById("submenuDescription").value;
        console.log(submenuDescription);
        console.log(submenuName);

        try {
          const response = await fetch(`/submenus/${currentMenuId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              name: submenuName,
              description: submenuDescription,
            }),
          });
          if (!response.ok) {
            throw new Error("Failed to add submenu.");
          }

          // Close the modal
          var modal = new bootstrap.Modal(
            document.getElementById("addSubmenuModal")
          );
          modal.hide();

          // Optionally, refresh or update the UI to reflect the new submenu
        } catch (error) {
          console.error("Error adding submenu:", error);
          alert("Failed to add submenu. Please try again.");
        }
      }

      // JavaScript to toggle submenu visibility and fetch submenus

      async function toggleSubmenu(menuId) {
        var submenu = document.getElementById("submenu-" + menuId);

        // Check if submenu is hidden or not visible
        if (submenu.style.display === "" || submenu.style.display === "none") {
          await fetchSubmenus(menuId); // Fetch submenus asynchronously
          submenu.style.display = "block";
        } else {
          submenu.style.display = "none";
        }
      }

      async function fetchSubmenus(menuId) {
        try {
          const response = await fetch(`/submenus/${menuId}`);
          if (!response.ok) {
            throw new Error("Failed to fetch submenus.");
          }
          const submenus = await response.json();
          console.log("Fetched submenus:", submenus);
          updateSubmenuUI(menuId, submenus); // Update UI with fetched submenus
        } catch (error) {
          console.error("Error fetching submenus:", error);
        }
      }

      function updateSubmenuUI(menuId, submenus) {
        var submenuContent = document.getElementById("submenu-" + menuId);
        submenuContent.innerHTML = ""; // Clear existing content

        if (submenus.length > 0) {
          submenus.forEach((submenu) => {
            var submenuItem = document.createElement("div");
            submenuItem.textContent =
              submenu.name + " - " + submenu.description;
            submenuContent.appendChild(submenuItem);
          });
        } else {
          submenuContent.textContent = "No submenus available.";
        }
      }

      function showUpdateForm(menuId) {
        var form = document.getElementById("update-form-" + menuId);
        form.style.display = "block";
      }

      function hideUpdateForm(menuId) {
        var form = document.getElementById("update-form-" + menuId);
        form.style.display = "none";
      }
    </script>
  </body>
</html>
